{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { clamp, lerp } from './maths.js'\n\nexport default class Lenis extends EventEmitter {\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\n    super()\n\n    this.lerp = lerp\n    this.smooth = smooth\n    this.direction = direction\n\n    window.addEventListener('scroll', this.onScroll, false)\n    window.addEventListener('resize', this.onWindowResize, false)\n\n    const html = document.querySelector('html')\n\n    html.style.scrollBehavior = 'initial'\n    // document.html.style.scrollBehavior = 'initial'\n    // document.body.style.scrollBehavior = 'initial'\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      firefoxMultiplier: 50,\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\n      useKeyboard: false,\n      useTouch: false,\n      passive: false,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n\n    this.onWindowResize()\n    this.limit =\n      this.direction === 'horizontal'\n        ? document.body.offsetWidth - this.windowWidth\n        : document.body.offsetHeight - this.windowHeight\n\n    // recalculate maxScroll when body height changes\n    this.resizeObserver = new ResizeObserver(this.onResize)\n    this.resizeObserver.observe(document.body)\n\n    this.targetScroll = this.scroll =\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\n    this.velocity = 0\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n  }\n\n  destroy() {\n    window.removeEventListener('scroll', this.onScroll, false)\n    window.removeEventListener('resize', this.onWindowResize, false)\n    this.virtualScroll.destroy()\n    this.resizeObserver.disconnect()\n  }\n\n  onResize = (entries) => {\n    const entry = entries[0]\n    if (entry) {\n      const rect = entry.contentRect\n      this.limit =\n        this.direction === 'horizontal'\n          ? rect.width - this.windowWidth\n          : rect.height - this.windowHeight\n    }\n  }\n\n  onWindowResize = () => {\n    this.windowHeight = window.innerHeight\n    this.windowWidth = window.innerWidth\n  }\n\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    // prevent native wheel scrolling\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\n\n    this.targetScroll -= deltaY\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\n  }\n\n  raf() {\n    if (this.stopped || !this.smooth) return\n    // where smooth scroll happens\n\n    let lastScroll = this.scroll\n\n    // lerp scroll value\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\n      this.scroll = lastScroll = this.targetScroll\n    }\n\n    this.velocity = this.scroll - lastScroll\n\n    if (this.scrolling) {\n      // scroll to lerped scroll value\n      this.direction === 'horizontal'\n        ? window.scrollTo(this.scroll, 0)\n        : window.scrollTo(0, this.scroll)\n      this.notify()\n    }\n\n    this.scrolling = this.scroll !== this.targetScroll\n  }\n\n  onScroll = (e) => {\n    if (this.stopped) return\n\n    // if scrolling is false we can estimate use isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\n    if (!this.scrolling || !this.smooth) {\n      // where native scroll happens\n\n      const lastScroll = this.scroll\n      this.targetScroll = this.scroll =\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\n      this.velocity = this.scroll - lastScroll\n      this.notify()\n    }\n  }\n\n  notify() {\n    this.emit('scroll', {\n      scroll: this.scroll,\n      limit: this.limit,\n      velocity: this.velocity,\n      direction: this.direction,\n    })\n  }\n\n  scrollTo(target, { offset = 0 } = {}) {\n    let value\n\n    if (typeof target === 'number') {\n      // Number\n      value = target\n    } else if (target === 'top') {\n      value = 0\n    } else if (target === 'bottom') {\n      value = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!target) return\n      const rect = node.getBoundingClientRect()\n      value =\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\n    }\n\n    value += offset\n\n    this.targetScroll = value\n    this.scrolling = true\n    if (!this.smooth) {\n      this.scroll = value\n      if (this.direction === 'horizontal') {\n        window.scrollTo(this.scroll, 0)\n      } else {\n        window.scrollTo(0, this.scroll)\n      }\n    }\n  }\n}\n","export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","direction","_navigator","_navigator$userAgentD","_navigator2","super","this","onResize","entries","entry","rect","contentRect","limit","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","deltaY","originalEvent","e","stopped","preventDefault","ctrlKey","targetScroll","Math","max","min","onScroll","scrolling","lastScroll","scroll","scrollX","scrollY","velocity","notify","addEventListener","document","querySelector","style","scrollBehavior","platform","navigator","userAgentData","virtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","body","offsetWidth","offsetHeight","resizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","round","scrollTo","emit","target","offset","value","node","nodeType","getBoundingClientRect","left","top"],"mappings":"0DAIqBA,MAAAA,UAA2BC,EAC9CC,aAAYC,KAAEA,EAAO,GAATC,OAAcA,GAAS,EAAvBC,UAA6BA,EAAY,YAAe,CAAzD,GAA6D,IAAAC,EAAAC,EAAAC,EACtEC,QADsEC,KA4DxEC,SAAYC,IACV,MAAWC,EAAGD,EAAQ,GACtB,GAAIC,EAAO,CACT,MAAUC,EAAGD,EAAME,YACnBL,KAAKM,MACgB,eAAnBN,KAAKL,UACDS,EAAKG,MAAQP,KAAKQ,YAClBJ,EAAKK,OAAST,KAAKU,YAC1B,QAGHC,eAAiB,KACfX,KAAKU,aAAeE,OAAOC,YAC3Bb,KAAKQ,YAAcI,OAAOE,UAAAA,OAG5BC,gBAAkB,EAAGC,SAAQC,cAAeC,MACtClB,KAAKmB,QACPD,EAAEE,kBAKApB,KAAKN,SAAWwB,EAAEG,SAASH,EAAEE,iBAEjCpB,KAAKsB,cAAgBN,EACrBhB,KAAKsB,aC1FIC,KAACC,ID0FgB,EC1FPD,KAAKE,ID0FKzB,KAAKsB,aAActB,KAAKM,QAA5B,EA4B3BoB,KAAAA,SAAYR,IACV,KAAIlB,KAAKmB,SAGJnB,KAAK2B,WAAc3B,KAAKN,QAAQ,CAGnC,MAAMkC,EAAa5B,KAAK6B,OACxB7B,KAAKsB,aAAetB,KAAK6B,OACJ,eAAnB7B,KAAKL,UAA6BiB,OAAOkB,QAAUlB,OAAOmB,QAC5D/B,KAAKgC,SAAWhC,KAAK6B,OAASD,EAC9B5B,KAAKiC,QACN,GA3HDjC,KAAKP,KAAOA,EACZO,KAAKN,OAASA,EACdM,KAAKL,UAAYA,EAEjBiB,OAAOsB,iBAAiB,SAAUlC,KAAK0B,UAAU,GACjDd,OAAOsB,iBAAiB,SAAUlC,KAAKW,gBAAgB,GAE1CwB,SAASC,cAAc,QAE/BC,MAAMC,eAAiB,UAI5B,MAAcC,GACH,SAATC,YAAA,WAAWC,sBAAX5C,EAA0B0C,YAA1B,OAAAzC,EAAsC0C,gBAAtC,EAAsC1C,EAAWyC,WAAY,UAG/DvC,KAAK0C,cAAgB,MAAkB,CACrCC,kBAAmB,GACnBC,gBAAiBL,EAASM,QAAQ,QAAU,EAAI,EAAI,GACpDC,aAAa,EACbC,UAAU,EACVC,SAAS,IAGXhD,KAAK0C,cAAcO,GAAGjD,KAAKe,iBAE3Bf,KAAKW,iBACLX,KAAKM,MACgB,eAAnBN,KAAKL,UACDwC,SAASe,KAAKC,YAAcnD,KAAKQ,YACjC2B,SAASe,KAAKE,aAAepD,KAAKU,aAGxCV,KAAKqD,eAAiB,mBAAmBrD,KAAKC,UAC9CD,KAAKqD,eAAeC,QAAQnB,SAASe,MAErClD,KAAKsB,aAAetB,KAAK6B,OACJ,eAAnB7B,KAAKL,UAA6BiB,OAAOkB,QAAUlB,OAAOmB,QAC5D/B,KAAKgC,SAAW,CACjB,CAEDuB,QACEvD,KAAKmB,SAAU,CAChB,CAEDqC,OACExD,KAAKmB,SAAU,CAChB,CAEDsC,UACE7C,OAAO8C,oBAAoB,SAAU1D,KAAK0B,UAAU,GACpDd,OAAO8C,oBAAoB,SAAU1D,KAAKW,gBAAgB,GAC1DX,KAAK0C,cAAce,UACnBzD,KAAKqD,eAAeM,YACrB,CA+BDC,MACE,GAAI5D,KAAKmB,UAAYnB,KAAKN,OAAQ,OAGlC,MAAiBM,KAAK6B,OC1FVpC,IAAiBoE,ED6F7B7D,KAAK6B,QC5FC,GADuBgC,ED6FsB7D,KAAKP,OAArCO,KAAK6B,OC5FCgC,ED4FO7D,KAAKsB,aACjCC,KAAKuC,MAAM9D,KAAK6B,UAAYN,KAAKuC,MAAM9D,KAAKsB,gBAC9CtB,KAAK6B,OAASD,EAAa5B,KAAKsB,cAGlCtB,KAAKgC,SAAWhC,KAAK6B,OAASD,EAE1B5B,KAAK2B,YAEY,eAAnB3B,KAAKL,UACDiB,OAAOmD,SAAS/D,KAAK6B,OAAQ,GAC7BjB,OAAOmD,SAAS,EAAG/D,KAAK6B,QAC5B7B,KAAKiC,UAGPjC,KAAK2B,UAAY3B,KAAK6B,SAAW7B,KAAKsB,YACvC,CAiBDW,SACEjC,KAAKgE,KAAK,SAAU,CAClBnC,OAAQ7B,KAAK6B,OACbvB,MAAON,KAAKM,MACZ0B,SAAUhC,KAAKgC,SACfrC,UAAWK,KAAKL,WAEnB,CAEDoE,SAASE,GAAQC,OAAEA,EAAS,GAAM,CAAA,GAChC,IAAAC,EAEA,GAAsB,iBAAXF,EAETE,EAAQF,OACH,GAAe,QAAXA,EACTE,EAAQ,OACCF,GAAW,WAAXA,EACTE,EAAQnE,KAAKM,UACR,CACL,MAEA,GAAsB,iBAAlB2D,EAEFG,EAAOjC,SAASC,cAAc6B,OACrBA,IAAAA,MAAAA,IAAAA,EAAQI,SAIjB,OAFAD,EAAOH,CAGR,CAED,IAAKA,EAAQ,OACb,MAAU7D,EAAGgE,EAAKE,wBAClBH,GACsB,eAAnBnE,KAAKL,UAA6BS,EAAKmE,KAAOnE,EAAKoE,KAAOxE,KAAK6B,MACnE,CAEDsC,GAASD,EAETlE,KAAKsB,aAAe6C,EACpBnE,KAAK2B,WAAY,EACZ3B,KAAKN,SACRM,KAAK6B,OAASsC,EACS,eAAnBnE,KAAKL,UACPiB,OAAOmD,SAAS/D,KAAK6B,OAAQ,GAE7BjB,OAAOmD,SAAS,EAAG/D,KAAK6B,QAG7B"}