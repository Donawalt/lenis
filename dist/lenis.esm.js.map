{"version":3,"file":"lenis.esm.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { clamp, lerp } from './maths.js'\n\nexport default class Lenis extends EventEmitter {\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\n    super()\n\n    this.lerp = lerp\n    this.smooth = smooth\n    this.direction = direction\n\n    window.addEventListener('scroll', this.onScroll, false)\n    window.addEventListener('resize', this.onWindowResize, false)\n\n    const html = document.querySelector('html')\n\n    html.style.scrollBehavior = 'initial'\n    // document.html.style.scrollBehavior = 'initial'\n    // document.body.style.scrollBehavior = 'initial'\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      firefoxMultiplier: 50,\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\n      useKeyboard: false,\n      useTouch: false,\n      passive: false,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n\n    this.onWindowResize()\n    this.limit =\n      this.direction === 'horizontal'\n        ? document.body.offsetWidth - this.windowWidth\n        : document.body.offsetHeight - this.windowHeight\n\n    // recalculate maxScroll when body height changes\n    this.resizeObserver = new ResizeObserver(this.onResize)\n    this.resizeObserver.observe(document.body)\n\n    this.targetScroll = this.scroll =\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\n    this.velocity = 0\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n  }\n\n  destroy() {\n    window.removeEventListener('scroll', this.onScroll, false)\n    window.removeEventListener('resize', this.onWindowResize, false)\n    this.virtualScroll.destroy()\n    this.resizeObserver.disconnect()\n  }\n\n  onResize = (entries) => {\n    const entry = entries[0]\n    if (entry) {\n      const rect = entry.contentRect\n      this.limit =\n        this.direction === 'horizontal'\n          ? rect.width - this.windowWidth\n          : rect.height - this.windowHeight\n    }\n  }\n\n  onWindowResize = () => {\n    this.windowHeight = window.innerHeight\n    this.windowWidth = window.innerWidth\n  }\n\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    // prevent native wheel scrolling\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\n\n    this.targetScroll -= deltaY\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\n  }\n\n  raf() {\n    if (this.stopped || !this.smooth) return\n    // where smooth scroll happens\n\n    let lastScroll = this.scroll\n\n    // lerp scroll value\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\n      this.scroll = lastScroll = this.targetScroll\n    }\n\n    this.velocity = this.scroll - lastScroll\n\n    if (this.scrolling) {\n      // scroll to lerped scroll value\n      this.direction === 'horizontal'\n        ? window.scrollTo(this.scroll, 0)\n        : window.scrollTo(0, this.scroll)\n      this.notify()\n    }\n\n    this.scrolling = this.scroll !== this.targetScroll\n  }\n\n  onScroll = (e) => {\n    if (this.stopped) return\n\n    // if scrolling is false we can estimate use isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\n    if (!this.scrolling || !this.smooth) {\n      // where native scroll happens\n\n      const lastScroll = this.scroll\n      this.targetScroll = this.scroll =\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\n      this.velocity = this.scroll - lastScroll\n      this.notify()\n    }\n  }\n\n  notify() {\n    this.emit('scroll', {\n      scroll: this.scroll,\n      limit: this.limit,\n      velocity: this.velocity,\n      direction: this.direction,\n    })\n  }\n\n  scrollTo(target, { offset = 0 } = {}) {\n    let value\n\n    if (typeof target === 'number') {\n      // Number\n      value = target\n    } else if (target === 'top') {\n      value = 0\n    } else if (target === 'bottom') {\n      value = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!target) return\n      const rect = node.getBoundingClientRect()\n      value =\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\n    }\n\n    value += offset\n\n    this.targetScroll = value\n    this.scrolling = true\n    if (!this.smooth) {\n      this.scroll = value\n      if (this.direction === 'horizontal') {\n        window.scrollTo(this.scroll, 0)\n      } else {\n        window.scrollTo(0, this.scroll)\n      }\n    }\n  }\n}\n","export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n"],"names":["Lenis","_temp","_navigator","_navigator$userAgentD","_navigator2","_this","_ref","_ref$lerp","lerp","_ref$smooth","smooth","_ref$direction","direction","onResize","entries","entry","rect","contentRect","limit","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","_ref2","deltaY","e","originalEvent","stopped","preventDefault","ctrlKey","targetScroll","Math","max","min","onScroll","scrolling","lastScroll","scroll","scrollX","scrollY","velocity","notify","addEventListener","document","querySelector","style","scrollBehavior","platform","navigator","userAgentData","virtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","body","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","start","this","stop","destroy","removeEventListener","disconnect","raf","amt","round","scrollTo","emit","target","value","_temp2","offset","_ref3$offset","node","nodeType","getBoundingClientRect","left","top","EventEmitter"],"mappings":"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"}